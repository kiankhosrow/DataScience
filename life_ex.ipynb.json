{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Year</th>\n",
       "      <th>Status</th>\n",
       "      <th>Life expectancy</th>\n",
       "      <th>Adult Mortality</th>\n",
       "      <th>infant deaths</th>\n",
       "      <th>Alcohol</th>\n",
       "      <th>percentage expenditure</th>\n",
       "      <th>Hepatitis B</th>\n",
       "      <th>Measles</th>\n",
       "      <th>...</th>\n",
       "      <th>Polio</th>\n",
       "      <th>Total expenditure</th>\n",
       "      <th>Diphtheria</th>\n",
       "      <th>HIV/AIDS</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Population</th>\n",
       "      <th>thinness  1-19 years</th>\n",
       "      <th>thinness 5-9 years</th>\n",
       "      <th>Income composition of resources</th>\n",
       "      <th>Schooling</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2015</td>\n",
       "      <td>Developing</td>\n",
       "      <td>65.0</td>\n",
       "      <td>263.0</td>\n",
       "      <td>62</td>\n",
       "      <td>0.01</td>\n",
       "      <td>71.279624</td>\n",
       "      <td>65.0</td>\n",
       "      <td>1154</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.16</td>\n",
       "      <td>65.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>584.259210</td>\n",
       "      <td>33736494.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>17.3</td>\n",
       "      <td>0.479</td>\n",
       "      <td>10.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2014</td>\n",
       "      <td>Developing</td>\n",
       "      <td>59.9</td>\n",
       "      <td>271.0</td>\n",
       "      <td>64</td>\n",
       "      <td>0.01</td>\n",
       "      <td>73.523582</td>\n",
       "      <td>62.0</td>\n",
       "      <td>492</td>\n",
       "      <td>...</td>\n",
       "      <td>58.0</td>\n",
       "      <td>8.18</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>612.696514</td>\n",
       "      <td>327582.0</td>\n",
       "      <td>17.5</td>\n",
       "      <td>17.5</td>\n",
       "      <td>0.476</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2013</td>\n",
       "      <td>Developing</td>\n",
       "      <td>59.9</td>\n",
       "      <td>268.0</td>\n",
       "      <td>66</td>\n",
       "      <td>0.01</td>\n",
       "      <td>73.219243</td>\n",
       "      <td>64.0</td>\n",
       "      <td>430</td>\n",
       "      <td>...</td>\n",
       "      <td>62.0</td>\n",
       "      <td>8.13</td>\n",
       "      <td>64.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>631.744976</td>\n",
       "      <td>31731688.0</td>\n",
       "      <td>17.7</td>\n",
       "      <td>17.7</td>\n",
       "      <td>0.470</td>\n",
       "      <td>9.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2012</td>\n",
       "      <td>Developing</td>\n",
       "      <td>59.5</td>\n",
       "      <td>272.0</td>\n",
       "      <td>69</td>\n",
       "      <td>0.01</td>\n",
       "      <td>78.184215</td>\n",
       "      <td>67.0</td>\n",
       "      <td>2787</td>\n",
       "      <td>...</td>\n",
       "      <td>67.0</td>\n",
       "      <td>8.52</td>\n",
       "      <td>67.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>669.959000</td>\n",
       "      <td>3696958.0</td>\n",
       "      <td>17.9</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.463</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2011</td>\n",
       "      <td>Developing</td>\n",
       "      <td>59.2</td>\n",
       "      <td>275.0</td>\n",
       "      <td>71</td>\n",
       "      <td>0.01</td>\n",
       "      <td>7.097109</td>\n",
       "      <td>68.0</td>\n",
       "      <td>3013</td>\n",
       "      <td>...</td>\n",
       "      <td>68.0</td>\n",
       "      <td>7.87</td>\n",
       "      <td>68.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>63.537231</td>\n",
       "      <td>2978599.0</td>\n",
       "      <td>18.2</td>\n",
       "      <td>18.2</td>\n",
       "      <td>0.454</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2933</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2004</td>\n",
       "      <td>Developing</td>\n",
       "      <td>44.3</td>\n",
       "      <td>723.0</td>\n",
       "      <td>27</td>\n",
       "      <td>4.36</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>68.0</td>\n",
       "      <td>31</td>\n",
       "      <td>...</td>\n",
       "      <td>67.0</td>\n",
       "      <td>7.13</td>\n",
       "      <td>65.0</td>\n",
       "      <td>33.6</td>\n",
       "      <td>454.366654</td>\n",
       "      <td>12777511.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>0.407</td>\n",
       "      <td>9.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2934</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2003</td>\n",
       "      <td>Developing</td>\n",
       "      <td>44.5</td>\n",
       "      <td>715.0</td>\n",
       "      <td>26</td>\n",
       "      <td>4.06</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.0</td>\n",
       "      <td>998</td>\n",
       "      <td>...</td>\n",
       "      <td>7.0</td>\n",
       "      <td>6.52</td>\n",
       "      <td>68.0</td>\n",
       "      <td>36.7</td>\n",
       "      <td>453.351155</td>\n",
       "      <td>12633897.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>9.9</td>\n",
       "      <td>0.418</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2935</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2002</td>\n",
       "      <td>Developing</td>\n",
       "      <td>44.8</td>\n",
       "      <td>73.0</td>\n",
       "      <td>25</td>\n",
       "      <td>4.43</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>73.0</td>\n",
       "      <td>304</td>\n",
       "      <td>...</td>\n",
       "      <td>73.0</td>\n",
       "      <td>6.53</td>\n",
       "      <td>71.0</td>\n",
       "      <td>39.8</td>\n",
       "      <td>57.348340</td>\n",
       "      <td>125525.0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.427</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2936</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2001</td>\n",
       "      <td>Developing</td>\n",
       "      <td>45.3</td>\n",
       "      <td>686.0</td>\n",
       "      <td>25</td>\n",
       "      <td>1.72</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>76.0</td>\n",
       "      <td>529</td>\n",
       "      <td>...</td>\n",
       "      <td>76.0</td>\n",
       "      <td>6.16</td>\n",
       "      <td>75.0</td>\n",
       "      <td>42.1</td>\n",
       "      <td>548.587312</td>\n",
       "      <td>12366165.0</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.427</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2937</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>2000</td>\n",
       "      <td>Developing</td>\n",
       "      <td>46.0</td>\n",
       "      <td>665.0</td>\n",
       "      <td>24</td>\n",
       "      <td>1.68</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>79.0</td>\n",
       "      <td>1483</td>\n",
       "      <td>...</td>\n",
       "      <td>78.0</td>\n",
       "      <td>7.10</td>\n",
       "      <td>78.0</td>\n",
       "      <td>43.5</td>\n",
       "      <td>547.358879</td>\n",
       "      <td>12222251.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>11.2</td>\n",
       "      <td>0.434</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2938 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Country  Year      Status  Life expectancy   Adult Mortality  \\\n",
       "0     Afghanistan  2015  Developing              65.0            263.0   \n",
       "1     Afghanistan  2014  Developing              59.9            271.0   \n",
       "2     Afghanistan  2013  Developing              59.9            268.0   \n",
       "3     Afghanistan  2012  Developing              59.5            272.0   \n",
       "4     Afghanistan  2011  Developing              59.2            275.0   \n",
       "...           ...   ...         ...               ...              ...   \n",
       "2933     Zimbabwe  2004  Developing              44.3            723.0   \n",
       "2934     Zimbabwe  2003  Developing              44.5            715.0   \n",
       "2935     Zimbabwe  2002  Developing              44.8             73.0   \n",
       "2936     Zimbabwe  2001  Developing              45.3            686.0   \n",
       "2937     Zimbabwe  2000  Developing              46.0            665.0   \n",
       "\n",
       "      infant deaths  Alcohol  percentage expenditure  Hepatitis B  Measles   \\\n",
       "0                62     0.01               71.279624         65.0      1154   \n",
       "1                64     0.01               73.523582         62.0       492   \n",
       "2                66     0.01               73.219243         64.0       430   \n",
       "3                69     0.01               78.184215         67.0      2787   \n",
       "4                71     0.01                7.097109         68.0      3013   \n",
       "...             ...      ...                     ...          ...       ...   \n",
       "2933             27     4.36                0.000000         68.0        31   \n",
       "2934             26     4.06                0.000000          7.0       998   \n",
       "2935             25     4.43                0.000000         73.0       304   \n",
       "2936             25     1.72                0.000000         76.0       529   \n",
       "2937             24     1.68                0.000000         79.0      1483   \n",
       "\n",
       "      ...  Polio  Total expenditure  Diphtheria    HIV/AIDS         GDP  \\\n",
       "0     ...    6.0               8.16         65.0        0.1  584.259210   \n",
       "1     ...   58.0               8.18         62.0        0.1  612.696514   \n",
       "2     ...   62.0               8.13         64.0        0.1  631.744976   \n",
       "3     ...   67.0               8.52         67.0        0.1  669.959000   \n",
       "4     ...   68.0               7.87         68.0        0.1   63.537231   \n",
       "...   ...    ...                ...          ...        ...         ...   \n",
       "2933  ...   67.0               7.13         65.0       33.6  454.366654   \n",
       "2934  ...    7.0               6.52         68.0       36.7  453.351155   \n",
       "2935  ...   73.0               6.53         71.0       39.8   57.348340   \n",
       "2936  ...   76.0               6.16         75.0       42.1  548.587312   \n",
       "2937  ...   78.0               7.10         78.0       43.5  547.358879   \n",
       "\n",
       "      Population   thinness  1-19 years   thinness 5-9 years  \\\n",
       "0     33736494.0                   17.2                 17.3   \n",
       "1       327582.0                   17.5                 17.5   \n",
       "2     31731688.0                   17.7                 17.7   \n",
       "3      3696958.0                   17.9                 18.0   \n",
       "4      2978599.0                   18.2                 18.2   \n",
       "...          ...                    ...                  ...   \n",
       "2933  12777511.0                    9.4                  9.4   \n",
       "2934  12633897.0                    9.8                  9.9   \n",
       "2935    125525.0                    1.2                  1.3   \n",
       "2936  12366165.0                    1.6                  1.7   \n",
       "2937  12222251.0                   11.0                 11.2   \n",
       "\n",
       "      Income composition of resources  Schooling  \n",
       "0                               0.479       10.1  \n",
       "1                               0.476       10.0  \n",
       "2                               0.470        9.9  \n",
       "3                               0.463        9.8  \n",
       "4                               0.454        9.5  \n",
       "...                               ...        ...  \n",
       "2933                            0.407        9.2  \n",
       "2934                            0.418        9.5  \n",
       "2935                            0.427       10.0  \n",
       "2936                            0.427        9.8  \n",
       "2937                            0.434        9.8  \n",
       "\n",
       "[2938 rows x 22 columns]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv(\"Life-Expectancy-Data.csv\")\n",
    "data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "data=data.groupby(\"Country\").mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "y=data['Life expectancy ']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "data=data.drop(columns=['Year','Life expectancy '],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Adult Mortality', 'infant deaths', 'Alcohol', 'percentage expenditure',\n",
       "       'Hepatitis B', 'Measles ', ' BMI ', 'under-five deaths ', 'Polio',\n",
       "       'Total expenditure', 'Diphtheria ', ' HIV/AIDS', 'GDP', 'Population',\n",
       "       ' thinness  1-19 years', ' thinness 5-9 years',\n",
       "       'Income composition of resources', 'Schooling'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1a1e9fab10>"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(data[\" HIV/AIDS\"],y,marker=\"+\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1a1e3dfa50>"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(data[\"GDP\"],y,marker=\"+\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "y.fillna(y.mean(),inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Adult Mortality                    10\n",
       "infant deaths                       0\n",
       "Alcohol                             2\n",
       "percentage expenditure              0\n",
       "Hepatitis B                         9\n",
       "Measles                             0\n",
       " BMI                                4\n",
       "under-five deaths                   0\n",
       "Polio                               0\n",
       "Total expenditure                   2\n",
       "Diphtheria                          0\n",
       " HIV/AIDS                           0\n",
       "GDP                                30\n",
       "Population                         48\n",
       " thinness  1-19 years               4\n",
       " thinness 5-9 years                 4\n",
       "Income composition of resources    17\n",
       "Schooling                          13\n",
       "dtype: int64"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.fillna(data.mean(), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Adult Mortality                    0\n",
       "infant deaths                      0\n",
       "Alcohol                            0\n",
       "percentage expenditure             0\n",
       "Hepatitis B                        0\n",
       "Measles                            0\n",
       " BMI                               0\n",
       "under-five deaths                  0\n",
       "Polio                              0\n",
       "Total expenditure                  0\n",
       "Diphtheria                         0\n",
       " HIV/AIDS                          0\n",
       "GDP                                0\n",
       "Population                         0\n",
       " thinness  1-19 years              0\n",
       " thinness 5-9 years                0\n",
       "Income composition of resources    0\n",
       "Schooling                          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train, x_test, y_train, y_test= train_test_split(data, y, test_size=0.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pret=model.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pre=model.predict(x_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9119742636076509"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.score(x_train,y_pre)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.773874596684996"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_train,y_pre)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "newy=np.concatenate((y_pre,y_pret),axis=0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['predict']=newy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Adult Mortality</th>\n",
       "      <th>infant deaths</th>\n",
       "      <th>Alcohol</th>\n",
       "      <th>percentage expenditure</th>\n",
       "      <th>Hepatitis B</th>\n",
       "      <th>Measles</th>\n",
       "      <th>BMI</th>\n",
       "      <th>under-five deaths</th>\n",
       "      <th>Polio</th>\n",
       "      <th>Total expenditure</th>\n",
       "      <th>Diphtheria</th>\n",
       "      <th>HIV/AIDS</th>\n",
       "      <th>GDP</th>\n",
       "      <th>Population</th>\n",
       "      <th>thinness  1-19 years</th>\n",
       "      <th>thinness 5-9 years</th>\n",
       "      <th>Income composition of resources</th>\n",
       "      <th>Schooling</th>\n",
       "      <th>predict</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Country</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>269.0625</td>\n",
       "      <td>78.2500</td>\n",
       "      <td>0.014375</td>\n",
       "      <td>34.960110</td>\n",
       "      <td>64.562500</td>\n",
       "      <td>2362.2500</td>\n",
       "      <td>15.51875</td>\n",
       "      <td>107.5625</td>\n",
       "      <td>48.3750</td>\n",
       "      <td>8.252500</td>\n",
       "      <td>52.3125</td>\n",
       "      <td>0.10000</td>\n",
       "      <td>340.015425</td>\n",
       "      <td>9.972260e+06</td>\n",
       "      <td>16.58125</td>\n",
       "      <td>15.58125</td>\n",
       "      <td>0.415375</td>\n",
       "      <td>8.21250</td>\n",
       "      <td>67.030366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Albania</td>\n",
       "      <td>45.0625</td>\n",
       "      <td>0.6875</td>\n",
       "      <td>4.848750</td>\n",
       "      <td>193.259091</td>\n",
       "      <td>98.000000</td>\n",
       "      <td>53.3750</td>\n",
       "      <td>49.06875</td>\n",
       "      <td>0.9375</td>\n",
       "      <td>98.1250</td>\n",
       "      <td>5.945625</td>\n",
       "      <td>98.0625</td>\n",
       "      <td>0.10000</td>\n",
       "      <td>2119.726679</td>\n",
       "      <td>6.969116e+05</td>\n",
       "      <td>1.61875</td>\n",
       "      <td>1.70000</td>\n",
       "      <td>0.709875</td>\n",
       "      <td>12.13750</td>\n",
       "      <td>77.554850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Algeria</td>\n",
       "      <td>108.1875</td>\n",
       "      <td>20.3125</td>\n",
       "      <td>0.406667</td>\n",
       "      <td>236.185241</td>\n",
       "      <td>78.000000</td>\n",
       "      <td>1943.8750</td>\n",
       "      <td>48.74375</td>\n",
       "      <td>23.5000</td>\n",
       "      <td>91.7500</td>\n",
       "      <td>4.604000</td>\n",
       "      <td>91.8750</td>\n",
       "      <td>0.10000</td>\n",
       "      <td>2847.853392</td>\n",
       "      <td>2.164983e+07</td>\n",
       "      <td>6.09375</td>\n",
       "      <td>5.97500</td>\n",
       "      <td>0.694875</td>\n",
       "      <td>12.71250</td>\n",
       "      <td>80.967361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Angola</td>\n",
       "      <td>328.5625</td>\n",
       "      <td>83.7500</td>\n",
       "      <td>5.740667</td>\n",
       "      <td>102.100268</td>\n",
       "      <td>70.222222</td>\n",
       "      <td>3561.3125</td>\n",
       "      <td>18.01875</td>\n",
       "      <td>132.6250</td>\n",
       "      <td>46.1250</td>\n",
       "      <td>3.919333</td>\n",
       "      <td>47.6875</td>\n",
       "      <td>2.36875</td>\n",
       "      <td>1975.143045</td>\n",
       "      <td>1.014710e+07</td>\n",
       "      <td>6.19375</td>\n",
       "      <td>6.66875</td>\n",
       "      <td>0.458375</td>\n",
       "      <td>8.04375</td>\n",
       "      <td>76.661805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Antigua and Barbuda</td>\n",
       "      <td>127.5000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>7.949333</td>\n",
       "      <td>1001.585226</td>\n",
       "      <td>98.266667</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>38.42500</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>96.9375</td>\n",
       "      <td>4.791333</td>\n",
       "      <td>98.3125</td>\n",
       "      <td>0.12500</td>\n",
       "      <td>9759.305728</td>\n",
       "      <td>1.257006e+07</td>\n",
       "      <td>3.42500</td>\n",
       "      <td>3.37500</td>\n",
       "      <td>0.488625</td>\n",
       "      <td>8.84375</td>\n",
       "      <td>76.874288</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Adult Mortality  infant deaths   Alcohol  \\\n",
       "Country                                                         \n",
       "Afghanistan                 269.0625        78.2500  0.014375   \n",
       "Albania                      45.0625         0.6875  4.848750   \n",
       "Algeria                     108.1875        20.3125  0.406667   \n",
       "Angola                      328.5625        83.7500  5.740667   \n",
       "Antigua and Barbuda         127.5000         0.0000  7.949333   \n",
       "\n",
       "                     percentage expenditure  Hepatitis B   Measles       BMI   \\\n",
       "Country                                                                         \n",
       "Afghanistan                       34.960110    64.562500  2362.2500  15.51875   \n",
       "Albania                          193.259091    98.000000    53.3750  49.06875   \n",
       "Algeria                          236.185241    78.000000  1943.8750  48.74375   \n",
       "Angola                           102.100268    70.222222  3561.3125  18.01875   \n",
       "Antigua and Barbuda             1001.585226    98.266667     0.0000  38.42500   \n",
       "\n",
       "                     under-five deaths     Polio  Total expenditure  \\\n",
       "Country                                                               \n",
       "Afghanistan                    107.5625  48.3750           8.252500   \n",
       "Albania                          0.9375  98.1250           5.945625   \n",
       "Algeria                         23.5000  91.7500           4.604000   \n",
       "Angola                         132.6250  46.1250           3.919333   \n",
       "Antigua and Barbuda              0.0000  96.9375           4.791333   \n",
       "\n",
       "                     Diphtheria    HIV/AIDS          GDP    Population  \\\n",
       "Country                                                                  \n",
       "Afghanistan              52.3125    0.10000   340.015425  9.972260e+06   \n",
       "Albania                  98.0625    0.10000  2119.726679  6.969116e+05   \n",
       "Algeria                  91.8750    0.10000  2847.853392  2.164983e+07   \n",
       "Angola                   47.6875    2.36875  1975.143045  1.014710e+07   \n",
       "Antigua and Barbuda      98.3125    0.12500  9759.305728  1.257006e+07   \n",
       "\n",
       "                      thinness  1-19 years   thinness 5-9 years  \\\n",
       "Country                                                           \n",
       "Afghanistan                       16.58125             15.58125   \n",
       "Albania                            1.61875              1.70000   \n",
       "Algeria                            6.09375              5.97500   \n",
       "Angola                             6.19375              6.66875   \n",
       "Antigua and Barbuda                3.42500              3.37500   \n",
       "\n",
       "                     Income composition of resources  Schooling    predict  \n",
       "Country                                                                     \n",
       "Afghanistan                                 0.415375    8.21250  67.030366  \n",
       "Albania                                     0.709875   12.13750  77.554850  \n",
       "Algeria                                     0.694875   12.71250  80.967361  \n",
       "Angola                                      0.458375    8.04375  76.661805  \n",
       "Antigua and Barbuda                         0.488625    8.84375  76.874288  "
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
